{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Solar Router for ESPHome","text":"<p>Solar Router for ESPHome is a DIY project aiming to provide specialized hardware device and software tailored for optimizing solar energy utilization. It performs real-time monitoring and intelligent surplus energy management to effectively channels excess solar energy to designated loads like water heaters or frost protection systems. </p> <p>Key features include a choice of dynamic energy routing algorithms (variable, ON/OFF), power meter sources (local or remote ...), regulators (with triac or relay ... ), and a seamless integration with HomeAssistant via ESPHome firmware. </p> <p>This component enables users to effortlessly monitor and control the router's functionality within the HomeAssistant ecosystem, facilitating streamlined energy management and automation.</p> <p>Important Notice</p> <p>This project involves working with high voltage (110 or 230 volts), which can be hazardous. Please read the disclaimer before proceeding with the Solar Router for ESPHome project. </p> <p>Extended capabilities with Home Assistant sensors</p> <p>Solar Router for ESPHome is nativelly compatible with some well known power meter of the market (See Power Meter chapter in the left menu). The power meter Home Assistant, extends the source of measurement the any sensors of Home Assistant making it compatible with a huge number of power meters.</p> <p> </p>"},{"location":"about/","title":"About","text":"<p>Early 2024, I built a solar router following the instruction of F1ATB . This solar router is very versatil but I was not satisfy about the integration with HomeAssistant. I then found the job made by Rem81  who create a solar router directly ESPHome and I thought it was certainly possible to have the modularity of F1ATB router with the level of integration in Home Assistant of an ESPHome device... and this project was born.</p>"},{"location":"about/#authors","title":"Authors","text":"<ul> <li>@XavierBerger - Creator of Solar Router for ESPHome</li> <li>@tikismoke : Home Assistant power meter first prototype</li> </ul>"},{"location":"changelog/","title":"Changelog","text":"<p>All notable changes to this project will be documented in this file.</p>"},{"location":"changelog/#141-2024-12-20","title":"1.4.1 - 2024-12-20","text":""},{"location":"changelog/#features","title":"\ud83d\ude80 Features","text":"<ul> <li>Add LED reflecting safety limit</li> </ul>"},{"location":"changelog/#documentation","title":"\ud83d\udcda Documentation","text":"<ul> <li>Add regulation waveformes</li> <li>Update temperature limiter documentation</li> </ul>"},{"location":"changelog/#140-2024-11-30","title":"1.4.0 - 2024-11-30","text":""},{"location":"changelog/#features_1","title":"\ud83d\ude80 Features","text":"<ul> <li>(energy_counter) Update min value of 'load_power'</li> <li>Add temperature reading from home assistant and create safety_limit algorithm</li> <li>Add DS18B20 temperature sensor</li> <li>Add temperature limiters</li> </ul>"},{"location":"changelog/#refactor","title":"\ud83d\ude9c Refactor","text":"<ul> <li>Move power_meter_activated in power_meter_common.yaml</li> </ul>"},{"location":"changelog/#documentation_1","title":"\ud83d\udcda Documentation","text":"<ul> <li>Fix wrong links</li> <li>Add schema showing packages interaction</li> <li>Add documentation for temperature limiters</li> </ul>"},{"location":"changelog/#miscellaneous-tasks","title":"\u2699\ufe0f Miscellaneous Tasks","text":"<ul> <li>Code cleanup</li> </ul>"},{"location":"changelog/#130-2024-11-23","title":"1.3.0 - 2024-11-23","text":""},{"location":"changelog/#features_2","title":"\ud83d\ude80 Features","text":"<ul> <li>(example) Update wt32-eth01 to use local variables when packagesi are locals</li> <li>(power_meter) Manage http error with on_error (introduced in 2024.11)</li> <li>Define ESPHome min_version required for build</li> <li>Add energy saved counter calculation base on regulator opening and load power</li> <li>Report energy diverted (calculated)</li> </ul>"},{"location":"changelog/#bug-fixes","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Do not divert energy when real power is not available</li> </ul>"},{"location":"changelog/#documentation_2","title":"\ud83d\udcda Documentation","text":"<ul> <li>Restore DrawIO schemas</li> <li>Add comment about engine ON/OFF</li> <li>Update documentation to explain energy counter</li> </ul>"},{"location":"changelog/#miscellaneous-tasks_1","title":"\u2699\ufe0f Miscellaneous Tasks","text":"<ul> <li>(engine) Code cleanup</li> <li>Code cleanup and better error managements</li> <li>Code cleanup and bug fix</li> </ul>"},{"location":"changelog/#120-2024-11-17","title":"1.2.0 - 2024-11-17","text":""},{"location":"changelog/#features_3","title":"\ud83d\ude80 Features","text":"<ul> <li>(power_meter) Add shelly EM/3EM power meter</li> <li>Add script to simulate Shelly probe web interface</li> <li>(example) Use power meter proxy to test power meter shelly</li> <li>(power_meter) Add optional HTTP Authentication Header for Shelly EM</li> <li>Add native support of shelly EM</li> </ul>"},{"location":"changelog/#documentation_3","title":"\ud83d\udcda Documentation","text":"<ul> <li>Update power meter documentation</li> <li>Add Shelly EM documentation</li> </ul>"},{"location":"changelog/#111-2024-11-16","title":"1.1.1 - 2024-11-16","text":""},{"location":"changelog/#features_4","title":"\ud83d\ude80 Features","text":"<ul> <li>(example) Add uptime and restart switch in a common configuration</li> <li>(engine) Add variable to invert LED controls</li> <li>(engine) Restore value of globale 'power_meter_activated'</li> <li>Change network connection detection</li> <li>Better manage communication error</li> <li>(example) Add reboot timeout to 24h</li> <li>Update wt32-eth01 example to use ethernet</li> <li>Improve reliability and code cleanup</li> </ul>"},{"location":"changelog/#bug-fixes_1","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>Reset stop counter when stop limit is not reached long enough</li> </ul>"},{"location":"changelog/#documentation_4","title":"\ud83d\udcda Documentation","text":"<ul> <li>Update contribution</li> <li>Fix typo</li> </ul>"},{"location":"changelog/#110-2024-11-11","title":"1.1.0 - 2024-11-11","text":""},{"location":"changelog/#features_5","title":"\ud83d\ude80 Features","text":"<ul> <li>(example) Add example using W32-ETH01 as power meter proxy</li> <li>(engine) Update restore_mode of 'activate' to RESTORE_DEFAULT_OFF</li> <li>(engine) Add ON/OFF engine</li> <li>(relay) Add mecanical relay</li> <li>Add engine ON/OFF and mecanical relay</li> </ul>"},{"location":"changelog/#refactor_1","title":"\ud83d\ude9c Refactor","text":"<ul> <li>(engine) [breaking] Rename solar_router_engine.yaml to engine.yaml</li> <li>(relay) [breaking] Rename relay to solid_state_relay</li> <li>[breaking] Rename engine and relay</li> <li>(engine) Extract common code from engine.yaml</li> </ul>"},{"location":"changelog/#documentation_5","title":"\ud83d\udcda Documentation","text":"<ul> <li>Add extension for better code highlight</li> <li>Update changelog and contributing instructions</li> <li>Fix typos</li> <li>Add documentation about 'recorder' configuration</li> <li>Update and fix typos</li> <li>Add Home Assistant power meter in installation documentation</li> <li>(hardware) The smallest Solar Router ever :-)</li> <li>Update documentation</li> </ul>"},{"location":"changelog/#miscellaneous-tasks_2","title":"\u2699\ufe0f Miscellaneous Tasks","text":"<ul> <li>Set default log level to INFO</li> </ul>"},{"location":"changelog/#103-2024-10-29","title":"1.0.3 - 2024-10-29","text":""},{"location":"changelog/#features_6","title":"\ud83d\ude80 Features","text":"<ul> <li>(fronius) Add logs for http_requests</li> <li>(proxy) Add encryption key to esp8285</li> <li>(example) Update ESP8285 proxy example</li> <li>Update github workflow</li> <li>Improve reliability</li> <li>(power_meter) Add power meter home assistant</li> </ul>"},{"location":"changelog/#bug-fixes_2","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>(http_request) Update watch configuration for ESP32 to avoid trigger in case of request timeout</li> <li>(esp8285) Remove web interface to have enought memory to run without crash</li> </ul>"},{"location":"changelog/#documentation_6","title":"\ud83d\udcda Documentation","text":"<ul> <li>Update contribution</li> <li>Cleanup documentation</li> <li>Add warning about network dependency</li> <li>Update About</li> <li>Add comment in proxy example</li> </ul>"},{"location":"changelog/#miscellaneous-tasks_3","title":"\u2699\ufe0f Miscellaneous Tasks","text":"<ul> <li>Add esphome compilation</li> <li>Update example configuration</li> <li>Add esphome compilation for every commit</li> </ul>"},{"location":"changelog/#102-2024-06-22","title":"1.0.2 - 2024-06-22","text":""},{"location":"changelog/#bug-fixes_3","title":"\ud83d\udc1b Bug Fixes","text":"<ul> <li>(http_request) Update according to change in 2024.6.1</li> <li>Add ota:platform required by 2024.6.1</li> </ul>"},{"location":"changelog/#documentation_7","title":"\ud83d\udcda Documentation","text":"<ul> <li>Update documentation</li> <li>Update documentation (fix typo and improve publication tool)</li> <li>Update social image</li> <li>Update documentation about changelog generation</li> </ul>"},{"location":"changelog/#miscellaneous-tasks_4","title":"\u2699\ufe0f Miscellaneous Tasks","text":"<ul> <li>Update .gitignore to exclude venv</li> <li>(esphome) Add esphome to develop outside HomeAssistant</li> <li>Code cleanup</li> <li>Update doc and code compilation with pip version of esphome</li> </ul>"},{"location":"changelog/#101-2024-04-04","title":"1.0.1 - 2024-04-04","text":""},{"location":"changelog/#features_7","title":"\ud83d\ude80 Features","text":"<ul> <li>(relay) Add regulator_relay</li> </ul>"},{"location":"changelog/#documentation_8","title":"\ud83d\udcda Documentation","text":"<ul> <li>Update documentation</li> </ul>"},{"location":"changelog/#miscellaneous-tasks_5","title":"\u2699\ufe0f Miscellaneous Tasks","text":"<ul> <li>Add tools for documentation publication</li> </ul>"},{"location":"changelog/#100-2024-04-02","title":"1.0.0 - 2024-04-02","text":""},{"location":"changelog/#features_8","title":"\ud83d\ude80 Features","text":"<ul> <li>Add initial version of yaml for solar router with triac</li> </ul>"},{"location":"changelog/#documentation_9","title":"\ud83d\udcda Documentation","text":"<ul> <li>Add documentation build with mkdocs</li> </ul>"},{"location":"changelog/#000-2024-04-01","title":"0.0.0 - 2024-04-01","text":""},{"location":"changelog/#features_9","title":"\ud83d\ude80 Features","text":"<ul> <li>Add proof of concept running on ESP8266</li> <li>Solar router proof of concept on ESP8266</li> </ul>"},{"location":"changelog/#miscellaneous-tasks_6","title":"\u2699\ufe0f Miscellaneous Tasks","text":"<ul> <li>Add .gitignore</li> </ul>"},{"location":"contributing/","title":"Contributing to development","text":"<p>Solar Router for ESPHome is design to be modular to make easy the customisation to various power meters and various regulators. You want to contribute? You are welcome and you will find bellow some recommendation to do so.</p>"},{"location":"contributing/#developing-a-hardware","title":"Developing a Hardware","text":"<p>You can propose any hardware based on your needs. If this new hardware require to use GPIO, the pins used by your hardware have to be configuration into <code>subsitution</code> section.</p> <p>A documentation have be added describing this new hardware and its constraints (Ex: GPIO capabilities). See update documentation chapter bellow.</p>"},{"location":"contributing/#developing-a-software-package","title":"Developing a Software package","text":""},{"location":"contributing/#setup-development-environement","title":"Setup development environement","text":"<p>To contribute to Solar Router for ESPHome and develop a new feature on your computer and propose a merge request, you should:</p> <ul> <li>Fork Solar Router for ESPHome repository on Github</li> <li>Clone your forked repository on your PC</li> <li>Create a development branch starting from main</li> <li>Create and activate a Python virtual environment <pre><code>python -m venv venv\nvenv/bin/activate\n</code></pre></li> <li>Install ESPHome CLI and other requirements:     <pre><code>pip install -r requirements.txt\n</code></pre></li> <li>Install and test your code on you device with <code>esphome</code> command line:      <pre><code>esphome run my_configuration.yaml\n</code></pre></li> <li>Update the code and push update on your repository</li> <li>Propose a pull request from your fork to the official repository</li> </ul>"},{"location":"contributing/#developping-a-power-meter","title":"Developping a Power Meter","text":"<p>A Power Meter is a component designed to provide and periodically update a sensor named <code>real_power</code>.</p> <pre><code>sensor:\n  # Sensor showing the actual power consumption\n  - id: real_power\n    platform: template\n    name: \"Real Power\"\n    device_class: \"power\"\n    unit_of_measurement: \"W\"\n    update_interval: 1s\n</code></pre> <p>Tip: See already developped power meter for examples</p> <p>This sensor is used by Engines to get the value of power exchanged with the grid.</p> <p>If this new power meter needs specific configuration, required parameters have to be added into <code>substitution</code> section.</p> <p>A documentation have to be added describing the power meter and how to configure it. See update documentation chapter bellow.</p>"},{"location":"contributing/#developping-a-regulator","title":"Developping a Regulator","text":"<p>A Regulator has to manage the percentage of energy sent to the load based on the <code>regulator_opening</code> sensor state. <code>regulator_opening</code> state can vary from 0 (where no energy is sent to the load) to 100 (where all the energy possible is sent to the load).</p> <p>The following code represent an example (extracted from regulator_triac.yaml) of usage based on <code>light</code> component using <code>brightness</code> to control the energy diverted:</p> <pre><code>script:\n  # Apply regulation on triac using light component\n  - id: regulation_control\n    mode: single\n    then:\n      # Apply opening level on triac using light component\n      - light.turn_on:\n          id: dimmer_controller\n          brightness: !lambda return id(regulator_opening).state/100.0;\n</code></pre> <p>Tip: See already developped regulators for examples</p> <p>If this new power meter needs specific configuration, required parameters have to be added into <code>substitution</code> section.</p> <p>A documentation have to be added describing the power meter and how to configure it. See update documentation chapter bellow.</p>"},{"location":"contributing/#update-documentation","title":"Update Documentation","text":"<p>Documentation is written using mkdocs and Material for MkDocs.</p> <p>To install <code>mkdocs</code>, you need to install Python and then :</p> <ul> <li>Create a virtual environment (see Python documentation).</li> <li>Install the required module with the following command <code>pip install -r requirements.txt</code>.</li> </ul> <p>Documentation is stored in <code>docs</code> directory. To see you modification in real time in your browser, execute the command <code>mkdocs serve</code> and browse http://127.0.0.1:8000</p> <p>Changelog update</p> <p>ChangeLog is only available in officially published documentation. Changelog is updated manually after a new release is published.</p> <p>Changelog is generated using <code>git-cliff</code>. Version are based on tags. Lines added in changelog are based on merge commit messages.</p> <p>The script <code>tools\\update_documentation.sh</code> is designed to update <code>changelog.md</code>, generate and publish <code>mkdocs</code> documentation on github pages. The script updating the documentation is entented to be used by repository maintainer only.</p>"},{"location":"disclamer/","title":"Disclamer","text":"<p>Disclaimer</p> <p>Before implementing the Solar Router for ESPHome project, it is imperative that users exercise extreme caution, particularly concerning the utilization of high voltage (110V/230V) power supply. The author of this project cannot be held liable for any potential accidents or mishaps that may occur during the setup or operation of the project.</p> <p>Electricity, especially at high voltages, poses significant risks, including but not limited to electrical shocks, fires, damage to equipment or death. It is essential that users have a thorough understanding of electrical safety protocols and adhere to all relevant guidelines and regulations.</p> <p>By proceeding with the implementation of the Solar Router for ESPHome project, users acknowledge and accept the inherent risks associated with working with electricity and agree to exercise utmost care and caution throughout the process.</p> <p>The author strongly advises users to consult with qualified professionals or electricians if they are uncertain about any aspect of the project or lack the necessary expertise in handling electrical systems.</p> <p>Remember, safety should always be the top priority when working with electricity.</p>"},{"location":"energy_counter_theorical/","title":"Energy Counter Theorical","text":"<p>Energy Counter Theorical is designed to calculate the amount energy diverted to the load. This is an optional package.</p> <p>The amount of energy diverted is calculated based on the load power (in <code>W</code>) and the level of energy diverted every seconds.</p> <p>Energy saved reported by this counter is for information only</p> <p>Remember that values are calculated and not measured. The values presented by this sensor are only estimations of energy diverted based on the configuration you made in Home Assistant.</p> <p>To use this counter, add the following lines to your configuration file.</p> <p><pre><code>packages:\n  counter:\n    url: https://github.com/XavierBerger/Solar-Router-for-ESPHome/\n    file: solar_router/energy_counter_theorical.yaml\n</code></pre> Then you have to define the load power in Home Assistant <code>Control</code> interface. The power entered has to reflect the power of the element plugged on solar router.</p> <p></p> <p>The instantaneous and cumulated energy diverted are available in <code>sensors</code> interface:</p> <p></p>"},{"location":"engine/","title":"Variable Engine","text":"<p>This package is implementing the engine of the solar router which determines when and how many energy has to be diverted to the load.</p> <p>Variable engine calls every second the power meter to get the actual energy exchanged with the grid. If energy produce is greater than energy consummed and exceed the define echange target, the engine will determine the percentage of the regulator \"opening\" and adjusts it dynamically to reach the target.</p> <p>Engine's automatic regulation can be activated or deactivated with the activation switch.</p>"},{"location":"engine/#user-feedback-leds","title":"User feedback LEDS","text":"<p>The yellow LED is reflecting the network connection:</p> <ul> <li>OFF : solar router is not connected to power supply.</li> <li>ON : solar router is connected to the network.</li> <li>blink : solar router is not connected to the network and is trying to reconnect.</li> <li>fast blink : An error occurs during the reading of energy exchanged with the grid.</li> </ul> <p>The green LED is reflecting the actual configuration of regulation:</p> <ul> <li>OFF : automatic regulation is deactivated.</li> <li>ON : automatic regulation is active and is not diverting energy to the load.</li> <li>blink : solar router is currently sending energy to the load.</li> </ul>"},{"location":"engine/#configuration","title":"Configuration","text":"<p>To use this package, add the following lines to your configuration file:</p> <pre><code>packages:\n  engine:\n    url: http://github.com/XavierBerger/ESPHome-Solar-Router/\n    file: solar_router/engine.yaml\n</code></pre> <p>When this package is used it is required to define the following paramater is <code>substitution</code> section as show in the example bellow:</p> <pre><code>substitutions:\n  # LEDs -------------------------------------------------------------------------\n  # Green LED is reflecting regulation status\n  # Yellow LED is reflecting power meter status\n  green_led_pin: GPIO19\n  yellow_led_pin: GPIO18\n</code></pre>"},{"location":"engine_on_off/","title":"ON/OFF Engine","text":"<p>This package is implementing the engine of the solar router which determines energy can be diverted to a local load or not.</p> <p>ON/OFF engine calls every second the power meter to get the actual power consumed. If energy sent to the grid is greater than the divertion start level (in W) during start tempo (in s), the relay is closed to use the energy locally. When the energy sent to the grid reach the level (in W) defined to stop the divertion during stop tempo (in s), the relay is openned and local consomption is stopped.</p> <p>ON/OFF engine's automatic regulation can be activated or deactivated with the activation switch.</p> <p>The following schema is representing the consumption with this engine activated:</p> <p></p> <p>Legend:</p> <ul> <li>Green: Energy consummed coming from solar pannel (self consumption)</li> <li>Yellow: Energy sent to the grid</li> <li>Red: Energy consummed coming from the grid</li> </ul> <p>How does it work?</p> <ul> <li>\u2460 The yellow part of the graph is showing the start level. When the energy send to the grid reach the start level, energy is diverted locally.</li> <li>\u2461 The yellow part of the graph is showing the stop level. In this example 0W.</li> </ul> <p>Carefully set the start and stop levels</p> <p>The start level has to be greater than the power of the load plugged to the solar router. If not, as soon as the energy will be diverted to the load, the stop level will be reached and you will see the router switching between ON and OFF (based on temporisation you defined).</p> <p>finely adjust start and stop tempo</p> <p>The start and stop tempo determine the responsiveness of the regulation. These delays must be finely adjusted to avoid oscillations. For example, if you have an electric stove, pay attention to the heating delays.</p>"},{"location":"engine_on_off/#user-feedback-leds","title":"User feedback LEDS","text":"<p>The yellow LED is reflecting the network connection:</p> <ul> <li>OFF : solar router is not connected to power supply.</li> <li>ON : solar router is connected to the network.</li> <li>blink : solar router is not connected to the network and is trying to reconnect.</li> <li>fast blink : An error occurs during the reading of energy exchanged with the grid.</li> </ul> <p>The green LED is reflecting the actual configuration of regulation:</p> <ul> <li>OFF : automatic regulation is deactivated.</li> <li>ON : automatic regulation is active and is not diverting energy to the load.</li> <li>blink : solar router is currently sending energy to the load.</li> </ul>"},{"location":"engine_on_off/#configuration","title":"Configuration","text":"<p>To use this package, add the following lines to your configuration file:</p> <pre><code>packages:\n  engine:\n    url: http://github.com/XavierBerger/ESPHome-Solar-Router/\n    file: solar_router/engine_on_off.yaml\n</code></pre> <p>When this package is used it is required to define the following paramater is <code>substitution</code> section as show in the example bellow:</p> <pre><code>substitutions:\n  # LEDs -------------------------------------------------------------------------\n  # Green LED is reflecting regulation status\n  # Yellow LED is reflecting power meter status\n  green_led_pin: GPIO19\n  yellow_led_pin: GPIO18\n</code></pre>"},{"location":"firmware/","title":"Firmware","text":"<p>Firmware has been split in several packages which can be assemble to the needs of user.</p> <p></p> <p>Packages are :</p> <ul> <li>Power meters : design to measure the energy exchanged with the grid.</li> <li>Engine : design to determine how much of energy and when surplus of energy should be diverted to the load.</li> <li>Regulator : design to channel the surplus of energy to a designated load.</li> <li>Energy counter : design to report the amount of energy diverted to the load.</li> <li>Temperature limiter: design to stop the system when a temperature limit is reached</li> </ul>"},{"location":"firmware/#packages","title":"Packages","text":"<p>Packages can be combined to create a variety of solar router as in following examples.</p>"},{"location":"firmware/#standalone-configuration","title":"Standalone configuration","text":"<p>In this standalone configuration, only one ESP32 is doing the job and is running all the 3 packages.</p> <p></p>"},{"location":"firmware/#power-meter-proxy-configuration","title":"Power Meter Proxy configuration","text":"<p>In this proxy configuration, two ESP is doing the job. The first one (which coud be located into the electrical panel) gather the power meter information. The second one (which could be located close to the water heater) is getting the power meter information from the first ESP through the network and perfom the regulation.</p> <p></p> <p>Note</p> <p>A Power Meter Proxy doesn't require a lot of CPU power and could then be executed on an ESP8285 or ESP8286.</p>"},{"location":"firmware/#multiple-solar-router-configuration","title":"Multiple Solar Router configuration","text":"<p>In this multiple Solar Router configuration, two solar router are installed. The first one is reading the power exchanged with the grid and is diverting surplus to a wather heater. The second one is reading power exchange information from the first one using a proxy power meter. Base on the information collected, it will divert the surplus of energy to an anti frost system.</p> <p></p> <p>Note</p> <p><code>reactivity</code> and <code>target grid exchange</code> will have to be adjusted carefully on both solar routers to avoid regulation conflicts.</p>"},{"location":"ha_configuration/","title":"Home Assistant configuration","text":"<p>Power meters and energy sensors are updated every secondes.  By default, Home Assistant recorder is saving these informations in its database. To optimize data storage in Home Assistant, it's essential to configure databases appropriately.</p> <ul> <li> <p>First Identify the Target Sensor to filter out   Power meter provides a sensor named <code>real_power</code>.   Energy counter provides a sensor named <code>theorical_energy_diverted</code>.   In your Home Assistant it should be prefixed with the name of your device and should then be identified with an id like <code>sensor.solarrouter_real_power</code> or <code>sensor.solarrouter_theorical_energy_diverted</code>.   Check your sensors to adapt the configuration.</p> </li> <li> <p>Then Create a <code>recorder</code> configuration for Home Assistant   Add the following lines in your <code>configuration.yaml</code> to filter out <code>real_power</code> and <code>theorical_energy_diverted</code> data:  </p> <pre><code>recorder:\n  exclude:\n    entities:\n      - sensor.solarrouter_real_power\n      - sensor.solarrouter_theorical_energy_diverted\n</code></pre> </li> </ul> <p>About recorder</p> <p>Home Assistant <code>recorder</code> is constantly saves data in database. Refer to recorder configuration for details. It is strongly advised to have a look to data produced by your solar router and adapt your configuration according to your needs.</p> <p>If you are using InfluxDB</p> <p>If you are using InfluxDB, you should pay the same attention about data recording. Refer to the integration documentation to exclude <code>real_power</code> and <code>theorical_energy_diverted</code> from your database.</p>"},{"location":"hardware/","title":"Hardware","text":"<p>The hardware used for development is the one proposed by F1ATB.fr .</p> <p>On the photos bellow; as the heat dissipator provided by RobotDyn is under dimensionned, the triac has been unsoldered from the board and screwed into a big heat dissipator. Wires have been added to link the triac into the board.</p> <p>A 12V power supply is used in addition with a buck converter to power the system. The 12V may be used to power a fan in an event of an over heating.</p> <p> </p> <p>The router has been built to be connected to a frost protection system and then provide standard electricals sockets.</p>"},{"location":"hardware/#using-a-regulator-base-on-a-triac","title":"Using a regulator base on a triac","text":"<p>Bill of material:</p> <ul> <li>1 x ESP32-dev board (Wroom-32U with external antenna)</li> <li>1 x Green LED</li> <li>1 x Yellow LED</li> <li>1 x Triac from RobotDyn 24A</li> <li>2 x resistor 470 Ohms for LEDs</li> </ul>"},{"location":"hardware/#using-a-regulator-base-on-a-relay","title":"Using a regulator base on a relay","text":"<p>Bill of material:</p> <ul> <li>1 x ESP32-dev board (Wroom-32U with external antenna)</li> <li>1 x Green LED</li> <li>1 x Yellow LED</li> <li>1 x Solid state relay</li> <li>2 x resistor 470 Ohms for LEDs</li> </ul>"},{"location":"hardware/#the-smallest-solar-router","title":"The smallest Solar Router","text":"<p>Bill of material:</p> <ul> <li>1 x ESP01 relay module board</li> <li>1 x ESP8266 (or equivalent)</li> </ul> <p>This router has some limitation</p> <ul> <li>It has to be used with ON/OFF engine and is not compatible with variable engine</li> <li>Due to the small space of memory, it doesn't support OTA update</li> </ul>"},{"location":"installation/","title":"Installation and Configuration","text":"<p>To install your solar router, you need to define the archtecture of your solution between standalone installation; installation working with proxy or multiple solar router installation.</p>"},{"location":"installation/#step-1-install-and-configure-esphome-firmware","title":"Step 1: Install and configure ESPHome firmware","text":"<p>Install ESPHome on your ESP as described into Ready-Made Project documentation. Select \"Empty ESPHome device\".</p> <p>Adopt it into Home Assistant.</p> <p>Wifi reconnection</p> <p>Remove <code>ap:</code> and <code>captive_portal:</code>. This could prevent the solar router from connecting to WiFi in case of loss of connection </p>"},{"location":"installation/#step-2-select-packages","title":"Step 2: Select packages","text":"<p>A solar router needs 3 packages: a power meter, a regulator and the engine.</p> <p>A proxy just need 1 power meter package</p>"},{"location":"installation/#step-21-select-a-power-meter","title":"Step 2.1: Select a Power Meter","text":"<ul> <li>Fronius     Get power data from Fronius inverter (Tested on Gen24 Primo)</li> <li>Home Assistant     Get power data from Home Assistant sensor</li> <li>Proxy client     Get power data from outside from solar router</li> </ul> <p>Contribute</p> <p>You are developer and your power meter is missing fron this list, refer to contributing section to see how to contribute to this project.</p>"},{"location":"installation/#step-22-select-a-regulator","title":"Step 2.2: Select a Regulator","text":"<ul> <li>For regulator which can be controlled from 0% to 100%<ul> <li>Triac Regulate energy with a Triac</li> <li>Solid State Relay Regulate energy with a Solid State Relais</li> </ul> </li> <li>For regulator wich can only be switched ON/OFF<ul> <li>Mecanical relay Regulate energy with mecanical relay</li> </ul> </li> </ul> <p>Contribute</p> <p>You are developer and your regulator is missing from this list, refer to contributing section to see how to contribute to this project.</p>"},{"location":"installation/#step-23-add-an-engine","title":"Step 2.3: Add an Engine","text":"<ul> <li> <p>Variable Engine   Read power exchange with the grid, determine and apply the percentage of regulator opening.</p> </li> <li> <p>ON/OFF Engine   Read power exchange with the grid, and start to divert energy if a threshold is reached and stop if another threshold is reached.</p> </li> </ul>"},{"location":"installation/#step-24-add-an-energy-counter-optional","title":"Step 2.4: Add an Energy Counter (Optional)","text":"<ul> <li>Energy Counter Theorical   Calculate energy savec base on energy diverted and load power.</li> </ul>"},{"location":"installation/#step-3-configure-your-solar-router","title":"Step 3: Configure your solar router","text":"<p>Each package requires a configuration which is done in <code>substitution</code> section. Refer to documentation of packages selected and add configuration to the end of your yaml file.</p> <p>You can refer to examples to see how to configure your yaml for a standalone installation a proxy based installation.</p> <p>More examples are available in github</p>"},{"location":"installation/#step-4-upload-firmware","title":"Step 4: Upload firmware","text":"<p>Install Solar Router on your ESP using OTA from Home Assistant.</p>"},{"location":"license/","title":"License","text":"<pre><code>                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. &lt;https://fsf.org/&gt;\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    &lt;one line to give the program's name and a brief idea of what it does.&gt;\n    Copyright (C) &lt;year&gt;  &lt;name of author&gt;\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see &lt;https://www.gnu.org/licenses/&gt;.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    &lt;program&gt;  Copyright (C) &lt;year&gt;  &lt;name of author&gt;\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n&lt;https://www.gnu.org/licenses/&gt;.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n&lt;https://www.gnu.org/licenses/why-not-lgpl.html&gt;.\n</code></pre>"},{"location":"power_meter/","title":"Power Meter","text":"<p>A power meter is designed to gather the power exchanged with the grid. Based on the value, the solar router engine will define the amount of energy to divert to minimise energy sent to the grid.</p> <p>Solar Router for ESPHome provide different kind of power meters. </p> <ul> <li>Home Assistant power meter can get every Home Assistant sensor as source but may have a refreshing rate slower than native power meters.</li> <li>Native power meter directly get information from the probe and have a faster refreshing rate. Some power can also have the advantage to not depend network (ethernet or WiFi).</li> </ul>"},{"location":"power_meter/#use-power-meter-as-a-proxy","title":"Use power meter as a proxy","text":"<p>Every power meter can be used as a proxy. A proxy is can be placed near the measurment probe and deliver its measurment to other solar router over the network.</p> <p>See proxy example to see how to implement it.</p> <p>ESP8266 and ESP8285</p> <p>ESP8266 and ESP8285 has few memory but can be used a proxy if ssl support is disabled in <code>http_request</code>.</p> <p><pre><code>http_request:\n  esp8266_disable_ssl_support: True\n</code></pre> See HTTP Request component for details</p>"},{"location":"power_meter_fronius/","title":"Fronius Power Meter","text":"<p>This power meter is designed to work with Fronius Smart Meter in conjunction with a Fronius Inverter.</p> <p>Fronius is providing an Open Inteface named Fronius Solar API which is allowing the quiery the inverter and locally get data.</p> <p>To use this package, add the following lines to your configuration file:</p> <pre><code>packages:\n  power_meter:\n    url: http://github.com/XavierBerger/ESPHome-Solar-Router/\n    file: solar_router/power_meter_fronius.yaml\n</code></pre> <p>This package needs to know the IP address of the inverter. This IP address has to be defined by <code>power_meter_ip_address</code> into <code>subtsitution</code> section of your configuration as in example ballow:</p> <pre><code>substitutions:\n  # Power meter source -----------------------------------------------------------\n  # Define ip address of Fronius inverter\n  power_meter_ip_address: \"192.168.1.21\"\n</code></pre> <p>This package is activated/deactivated with a global variable <code>power_meter_activated</code>. By default a power meter is deactivated at start. The activation switch determines if power meter has to be started or not. </p> <p>If this power meter is use inside a proxy it is required to activated in at start by setting <code>power_meter_activated_at_start</code> to <code>1</code> into you configuration yaml as in the example bellow:</p> <pre><code>substitutions:\n  power_meter_activated_at_start: \"1\"\n</code></pre> <p>Network dependency</p> <p>This power meter require the network to gather information about energy exchanged with the grid.</p>"},{"location":"power_meter_home_assistant/","title":"Home Assistant Power Meter","text":"<p>This power meter is designed get power consumption directly from Home Assistant sensor.</p> <p>To use this package, add the following lines to your configuration file:</p> <pre><code>packages:\n  power_meter:\n    url: http://github.com/XavierBerger/ESPHome-Solar-Router/\n    file: solar_router/power_meter_home_assistant.yaml\n</code></pre> <p>This package needs to know the sensor to use to get the power consumption. This sensor has to be defined by <code>main_power_sensor</code> into <code>subtsitutions</code> section of your configuration as in example ballow:</p> <pre><code>substitutions:\n  # Power meter source -----------------------------------------------------------\n  # Sensor in home assistant gathering the power consumption\n  main_power_sensor: sensor.main_power\n</code></pre> <p>Data availability and refresh rate</p> <p>This power meter rely on Home Assistant to gather the value of energy exchanged with the grid. It also depends on the rate of sensor update. If a sensor is updated too slowly, the regulation may not work as expected.</p> <p>Contrary to Home Assistant power meter, native power meters are autonomous and can continue to regulate even is Home Assistant is offline. Some power meter can have a direct access to the measure and may even be independent to the network.</p>"},{"location":"power_meter_proxy_client/","title":"Proxy Client Power Meter","text":"<p>A proxy client is designed to get the power meter values from an other component. This component could be a dedicated device such as an ESP8266 running only one power meter package (See proxy architecture) or it can be another solar router runing a power meter reading the real power exchanged with the grid (See multiple solar router architecture).</p> <p>To use this package, add the following lines to your configuration file:</p> <pre><code>packages:\n  power_meter:\n    url: http://github.com/XavierBerger/ESPHome-Solar-Router/\n    file: solar_router/power_meter_proxy.yaml\n</code></pre> <p>This integration needs to know the IP address of the power meter proxy. This IP address has to be defined into <code>power_meter_ip_address</code> into <code>subtsitutions</code> section of your configuration as in example bellow:</p> <pre><code>substitutions:\n  # Power meter source -----------------------------------------------------------\n  # Define ip address of Fronius inverter\n  power_meter_ip_address: \"192.168.1.21\"\n</code></pre> <p>This integration is activated/deactivated with a global variable <code>power_meter_activated</code>. This variable can be modified by a switch inside Home Assistant.</p> <p>Network dependency</p> <p>This power meter require the network to gather information about energy exchanged with the grid.</p>"},{"location":"power_meter_shelly_em/","title":"Shelly EM Power Meter","text":"<p>This power meter is designed get power consumption directly from Shelly EM sensor.</p> <p>To use this package, add the following lines to your configuration file:</p> <pre><code>packages:\n  power_meter:\n    url: http://github.com/XavierBerger/ESPHome-Solar-Router/\n    file: solar_router/power_meter_shelly_em.yaml\n</code></pre> <p>This package needs to know Shelly EM IP address and emeter index to use to get the power consumption. This Shelly EM IP address and emeter index have to be defined by <code>power_meter_ip_address</code> and <code>emeter_index</code> into <code>substitutions</code> section of your configuration as in example ballow:</p> <pre><code>substitutions:\n  # Power meter source -----------------------------------------------------------\n  # Define ip address of Shelly EM probe\n  power_meter_ip_address: \"192.168.1.26:8000\"\n  emeter_index: \"0\"\n</code></pre> <p>HTTP Authentication Header</p> <p>This power meter allow to define HTTP Authentication Header with the variable <code>power_meter_auth_header</code>. This variable can be set in <code>substitution</code> section.</p> <p>This package is activated/deactivated with a global variable <code>power_meter_activated</code>. By default a power meter is deactivated at start. The activation switch determines if power meter has to be started or not. </p> <p>If this power meter is use inside a proxy it is required to activated in at start by setting <code>power_meter_activated_at_start</code> to <code>1</code> into you configuration yaml as in the example bellow:</p> <pre><code>substitutions:\n  power_meter_activated_at_start: \"1\"\n</code></pre> <p>Network dependency</p> <p>This power meter require the network to gather information about energy exchanged with the grid.</p>"},{"location":"proxy_example/","title":"Solar Router using a proxy","text":"<p>The configuration of the Proxy client is only using a Home Assistant power meter</p> <pre><code># ----------------------------------------------------------------------------------------------------\n# ESPHome configuration - This part depends on your hardware target\n# ----------------------------------------------------------------------------------------------------\n\nesphome:\n  name: \"esp8285\"\n  friendly_name: ESP8285\n\nesp8266:\n  board: esp8285\n\n# Enable logging\nlogger:\n  baud_rate: 115200\n  level: INFO\n  logs:\n    component: ERROR\n    http_request.arduino: ERROR\n\n# Enable Home Assistant API\napi:\n  encryption:\n    key: !secret proxy_api_encryption_key\n\n# Enable over-the-air updates\nota:\n  - platform: esphome\n\n# WiFi connection\nwifi:\n  ssid: !secret wifi_ssid\n  password: !secret wifi_password\n  # If you have a WiFi activity plannification, you may have to update the reboot timeout (Default: 15min)\n  reboot_timeout: 24h\n\n# ----------------------------------------------------------------------------------------------------\n# Customisation\n# ----------------------------------------------------------------------------------------------------\n\nsubstitutions:\n  # Power meter source -----------------------------------------------------------\n  # Define ip address of Shelly EM probe\n  power_meter_ip_address: \"192.168.1.26:8000\"\n  emeter_index: \"0\"\n\n  # LEDs -------------------------------------------------------------------------\n  # Yellow LED is reflecting power meter\n  yellow_led_pin: GPIO1\n\n  # power_meter_activated has to be set to 1 to activate the power measurment read\n  power_meter_activated_at_start: \"1\"\n\n# Uncomment the following lines if you want to use the source from github\n# packages:\n#   power_meter:\n#     url: https://github.com/XavierBerger/Solar-Router-for-ESPHome/\n#     file: solar_router/power_meter_shelly_em.yaml\n#     refresh: 5s\n\n# Remove the following lines if you want to use the source from github\npackages:\n  common:\n    &lt;&lt;: !include solar_router/common.yaml\n  power_meter:\n    &lt;&lt;: !include solar_router/power_meter_shelly_em.yaml\n\nhttp_request:\n  esp8266_disable_ssl_support: True\n</code></pre> <p>This configuration the Solar Router is using Proxy client power meter, Triac regulator and Solar router engine.</p> <p>GPIO pins have been defined to match hardware configuration described here</p> <pre><code># ----------------------------------------------------------------------------------------------------\n# ESPHome configuration - This part depends on your hardware target\n# ----------------------------------------------------------------------------------------------------\n\nesphome:\n  name: solarrouter\n  friendly_name: SolarRouter\n\nesp32:\n  board: esp32dev\n  framework:\n    type: arduino\n\n# Enable logging\nlogger:\n  baud_rate: 115200\n  level: INFO\n  logs:\n    component: ERROR\n\n# Enable Home Assistant API\napi:\n  encryption:\n    key: !secret api_encryption_key\n\n# Enable over-the-air updates\nota:\n  - platform: esphome\n    password: !secret solar_router_ota_password\n\n# Enable improv serial\nimprov_serial:\n\n# WiFi connection\nwifi:\n  ssid: !secret wifi_ssid\n  password: !secret wifi_password\n  # If you have a WiFi activity plannification, you may have to update the reboot timeout (Default: 15min)\n  reboot_timeout: 24h\n\n# Activate web interface\nweb_server:\n  port: 80\n\n# ----------------------------------------------------------------------------------------------------\n# Customisation\n# ----------------------------------------------------------------------------------------------------\n\n# This part of the script is designed to be use for customisation. It shouldn't be necessary to\n# edit other part of the script to perform configuration.\nsubstitutions:\n  # Power meter source -----------------------------------------------------------\n  # Define ip address of Proxy Power Meter\n  power_meter_ip_address: \"192.168.1.30\"\n\n  # Regulator --------------------------------------------------------------------\n  regulator: \"ac_dimmer\"\n\n  # Regulator configuration \n  # Define GPIO pin connected to AC Dimmer for gate and zero crossing detection.\n  regulator_gate_pin: GPIO22\n  regulator_zero_crossing_pin: GPIO23\n\n  # LEDs -------------------------------------------------------------------------\n  # Green LED is reflecting regulation status\n  # Yellow LED is reflecting power meter status\n  green_led_pin: GPIO19\n  yellow_led_pin: GPIO18\n\n# Uncomment the following lines if you want to use the source from github\n# packages:\n#   power_meter:\n#     url: https://github.com/XavierBerger/Solar-Router-for-ESPHome/\n#     file: solar_router/power_meter_proxy_client.yaml\n#     refresh: 5s\n#   regulator:\n#     url: https://github.com/XavierBerger/Solar-Router-for-ESPHome/\n#     file: solar_router/regulator_triac.yaml\n#     refresh: 5s\n#   solar_router:\n#     url: https://github.com/XavierBerger/Solar-Router-for-ESPHome/\n#     file: solar_router/engine.yaml\n#     refresh: 5s\n\n# Remove the following lines if you want to use the source from github\npackages:\n  common:\n    &lt;&lt;: !include solar_router/common.yaml\n  power_meter:\n    &lt;&lt;: !include solar_router/power_meter_proxy_client.yaml\n  regulator:\n    &lt;&lt;: !include solar_router/regulator_triac.yaml\n  solar_router:\n    &lt;&lt;: !include solar_router/engine.yaml\n  energy_counter: \n    &lt;&lt;: !include solar_router/energy_counter_theorical.yaml\n</code></pre>"},{"location":"regulator_mecanical_relay/","title":"Mecanical Relay Regulator","text":"<p>This regulator is performing an All or Nothing Regulation.</p> <p></p> <p>A relay is able to let current pass to the load or not. </p> <p>The following schematic is representing the wiring of the relay:</p> <p></p> <p>Be carefull during wiring and use the Normally Open (NO) pin.</p> <p>WARNING : This kind of relay is not compatible with variable engine. Only use it engine ON/OFF</p> <p>To use this package, add the following lines to your configuration file:</p> <pre><code>packages:\n  regulator:\n    url: http://github.com/XavierBerger/ESPHome-Solar-Router/\n    file: solar_router/regulator_mecanical_relay.yaml\n</code></pre> <p>This package require the definition of pin connected to the gate of the relay : <code>regulator_gate_pin</code></p> <pre><code>substitutions:\n  # Regulator configuration ------------------------------------------------------\n  # Define GPIO pin connected to the relay gate.\n  regulator_gate_pin: GPIO22\n</code></pre>"},{"location":"regulator_solid_state_relay/","title":"Solid State Relay Regulator","text":"<p>This regulator is performing a Burst Fire Regulation.</p> <p></p> <p>A relay is able to let current pass to the load or not. By sending small part of current (blinking), it is possibile to divert a well defined amount of energy to the load.</p> <p>Tip: This regulator can also be used with a triac</p> How does this regulator work? <p>This regulator is sending a PWM (Pulse Width Modulation) signal to the relay. The period of the PWM is 330ms. The duty cycle determine the amount of energy transfered. If you want to know more how a PWM can regulate the transmited energy, you can refer to Wikipedia. Duty Cycle examples (Source: Wikipedia) </p> <p></p> <p>Warning</p> <p>It is recommanded to attched the relay to a heat dissipator.</p> <p>The following schematic is representing the wiring of the relay:</p> <p></p> <p>To use this package, add the following lines to your configuration file:</p> <pre><code>packages:\n  regulator:\n    url: http://github.com/XavierBerger/ESPHome-Solar-Router/\n    file: solar_router/regulator_solid_state_relay.yaml\n</code></pre> <p>This package require the definition of pin connected to the gate of the relay : <code>regulator_gate_pin</code></p> <pre><code>substitutions:\n  # Regulator configuration ------------------------------------------------------\n  # Define GPIO pin connected to the relay gate.\n  regulator_gate_pin: GPIO22\n</code></pre>"},{"location":"regulator_triac/","title":"Triac Regulator","text":"<p>This regulator is performing a Phase Control Regulation.</p> <p></p> <p>A triac is able to split the current sent to the load to reduce the power transmitted. This component is the base of AC Dimmers.</p> How does this regulator work? <p>If you want to know more how a triac can regulate the transmited energy, you can refer to Wikipedia. The following schema is showing how the input sinus is cut to reduce the energy transfered to the load:</p> <p> Sinus spliting (Source: Wikipedia) </p> <p>In this package, we propose to use a board manufactured by RobotDyn.</p> <p></p> <p>Warning</p> <p>The triac is supposed to support up the 24A (which represent a power greater than 5500W). The heat dissipator is undersized regarding to the level of energy which is supported by the triac. It is then recommanded to replace the heat dissipator with a bigger one.</p> <p>The following schematic is representing the wiring of the board: </p> <p>To use this package, add the following lines to your configuration file:</p> <pre><code>packages:\n  regulator:\n    url: http://github.com/XavierBerger/ESPHome-Solar-Router/\n    file: solar_router/regulator_triac.yaml\n</code></pre> <p>This package require the definition of pin connected to the triac module for zero crossing detection (<code>regulator_zero_crossing_pin</code>) and gate/PWM control (<code>regulator_gate_pin</code>)</p> <pre><code>substitutions:\n  # Regulator configuration ------------------------------------------------------\n  # Define GPIO pin connected to AC Dimmer for gate and zero crossing detection.\n  regulator_gate_pin: GPIO22\n  regulator_zero_crossing_pin: GPIO23\n</code></pre>"},{"location":"solar_router/","title":"Solar Router / Diverter","text":"<p>Solar Router for ESPHome has been designed to work with Home Assistant and it requires the installation of ESPHome integration.  </p>"},{"location":"solar_router/#variable-regulation","title":"Variable regulation","text":"<p>Controls</p> <ul> <li>Activate Solar Routing   Control if Solar routing should be activated or not</li> <li>Reactivity   How fast will be the solar routing </li> <li>Regulator opening   What is the current percentage of gate opening to send energy to the load </li> <li>Target grid exchange   What is the target of energy exchanged with the grid.   &lt; 0 energy is sent to the grid   &gt; 0 energy is used from the grid</li> </ul> <p>Sensors</p> <ul> <li>Real Power   Energy actually exchanged with the grid. Updated every secondes. </li> </ul> <p> </p> <p>Note</p> <p>When solar routing is deactivated, regulator opening slider can be modified \"by hand\". If you modify the triac opening state while the solar routing is enabled, the routing algorithm will immediately modify the value to meet target grid exchange level.</p>"},{"location":"solar_router/#onoff-regulation","title":"ON/OFF regulation","text":"<p>Controls</p> <ul> <li>Activate Solar Routing   Control if Solar routing should be activated or not</li> <li>Energy divertion   Ectivate energy divertion or not </li> <li>Start power level   Define the level of energy when divertion has to start  </li> <li>Start tempo   How long the start level has to be exceed before diverting energy  </li> <li>Stop power level   Define the level of energy when divertion has to stop  </li> <li>Start tempo   How long the stop level has to be reached before diverting energy</li> </ul> <p>Sensors</p> <ul> <li>Real Power   Energy actually exchanged with the grid. Updated every secondes.</li> <li>Start Tempo   Counter defining when enegy divertion has to start </li> <li>Stop Tempo   Counter defining when enegy divertion has to stop </li> </ul> <p> </p> <p>Note</p> <p>When solar routing is deactivated, regulator opening slider can be modified \"by hand\". If you modify the triac opening state while the solar routing is enabled, the routing algorithm will immediately modify the value to meet target grid exchange level.</p>"},{"location":"standalone_example/","title":"Standalone Solar Router","text":"<p>This configuration of the Solar Router is using Fronuis power meter, Triac regulator, Variable engine.</p> <p>GPIO pins have been defined to match hardware configuration described here</p> <pre><code># ----------------------------------------------------------------------------------------------------\n# ESPHome configuration - This part depends on your hardware target\n# ----------------------------------------------------------------------------------------------------\n\nesphome:\n  name: solarrouter\n  friendly_name: SolarRouter\n\nesp32:\n  board: esp32dev\n  framework:\n    type: arduino\n\n# Enable logging\nlogger:\n  baud_rate: 115200\n  level: INFO\n  logs:\n    component: ERROR\n    light: ERROR\n\n# Enable Home Assistant API\napi:\n  encryption:\n    key: !secret api_encryption_key\n\n\n# Enable over-the-air updates\nota:\n  - platform: esphome\n    password: !secret solar_router_ota_password\n\n# Enable improv serial\nimprov_serial:\n\n# WiFi connection\nwifi:\n  ssid: !secret wifi_ssid\n  password: !secret wifi_password\n  # If you have a WiFi activity plannification, you may have to update the reboot timeout (Default: 15min)\n  reboot_timeout: 24h\n\n# Activate web interface\nweb_server:\n  port: 80\n\n# Define watchdog time (it should be greater than timeout)\nhttp_request:\n  watchdog_timeout: 12s\n\n# ----------------------------------------------------------------------------------------------------\n# Customisation\n# ----------------------------------------------------------------------------------------------------\n\n# This part of the script is designed to be use for customisation. It shouldn't be necessary to\n# edit other part of the script to perform configuration.\n\nsubstitutions:\n  # Power meter source -----------------------------------------------------------\n  # Define ip address of Power Meter (Fronius Inverter)\n  power_meter_ip_address: \"192.168.1.21\"\n\n\n  # Regulator --------------------------------------------------------------------\n  regulator: \"ac_dimmer\"\n\n  # Regulator configuration \n  # Define GPIO pin connected to AC Dimmer for gate and zero crossing detection.\n  regulator_gate_pin: GPIO22\n  regulator_zero_crossing_pin: GPIO23\n\n  # LEDs -------------------------------------------------------------------------\n  # Green LED is reflecting regulation status\n  # Yellow LED is reflecting power meter status\n  green_led_pin: GPIO19\n  yellow_led_pin: GPIO18\n\n  # Temperature sensor\n  temperature_sensor: \"input_number.test_temperature\"\n  red_led_pin: GPIO4\n\n\n# Uncomment the following lines if you want to use the source from github\n# packages:\n#   power_meter:\n#     url: https://github.com/XavierBerger/Solar-Router-for-ESPHome/\n#     file: solar_router/power_meter_fronius.yaml\n#     refresh: 5s\n#   regulator:\n#     url: https://github.com/XavierBerger/Solar-Router-for-ESPHome/\n#     file: solar_router/regulator_triac.yaml\n#     # file: solar_router/regulator_relay.yaml\n#     refresh: 5s\n#   solar_router:\n#     url: https://github.com/XavierBerger/Solar-Router-for-ESPHome/\n#     file: solar_router/engine.yaml\n#     refresh: 5s\n\n# And Comment the following lines if you want to use the source from github\npackages:\n  common:\n    &lt;&lt;: !include solar_router/common.yaml\n  power_meter:\n    &lt;&lt;: !include solar_router/power_meter_fronius.yaml\n  regulator:\n    &lt;&lt;: !include solar_router/regulator_triac.yaml\n  solar_router:\n    &lt;&lt;: !include solar_router/engine.yaml\n  energy_counter: \n    &lt;&lt;: !include solar_router/energy_counter_theorical.yaml\n  temperature_limiter:\n    &lt;&lt;: !include solar_router/temperature_limiter_home_assistant.yaml\n</code></pre>"},{"location":"temperature_limiter/","title":"Temperature limiters","text":"<p>A temperature limiter is designed to monitor a temperature and stop energy diverting when a threshold is reached. The regulation is reactivated when restart condition is ready again .</p> <p>The 2 thresholds regulation is named hysteresis. This mechansim avoid regulation bouncing.</p> More details about hysteresis and Schmitt trigger here <p>The implementation of hysteresis in this package is similar to the electronic circuit named Schmitt trigger. The circuit is named a trigger because the output retains its value until the input changes sufficiently to trigger a change.</p> <p> Transfer function of a Schmitt trigger. The horizontal and vertical axes are input voltage and output voltage, respectively. T and \u2212T are the switching thresholds, and M and \u2212M are the output voltage levels.</p> <p> Comparison of the action of an ordinary comparator (A) and a Schmitt trigger (B) on a noisy analog input signal (U). The green dotted lines are the circuit's switching thresholds. The Schmitt trigger tends to remove noise from the signal.</p> <p>source: wikipedia</p> <p>If temperature is not reachable, <code>safety_limit</code> is activated and energy divertion is stopped</p> <p></p> <p>Controls</p> <ul> <li>Restart temperature   Define the temperature when regulation can restart after a safety limit.</li> <li>Stop temperature   Define the temperature when regulation is stopped due to threshold reached.</li> <li>Use for cooling   When regulation is use on a heating system restart temperature has to be lower than stop temperature. This is the oposit for a cooling system.</li> </ul> <p></p> <p>Sensors</p> <ul> <li>Safety limit   This binary sensor shows if safety limit is activated or not.</li> <li>safety temperature   This sensors show the actual temperature which is compared with thresholds. </li> </ul>"},{"location":"temperature_limiter_DS18B20/","title":"Temperature limiter DS 18B20","text":"<p>This package is designed to monitor a temperature coming from a DS18B20 sensor connected on ESP32 and determines if a temperature threshold as been reached or not.</p> <p>When safety limit is reached, it is possible to turn on a LED. LED configuration has to be added in <code>substitutions</code> section as explained bellow.</p> <p>WARNING: Conduct some tests before letting the system regulate alone</p> <p>This temperature limit monitoring and safety limit may have some bug. It is strongly advised to validate the behaviour of your system carefully before letting the system working by its own.</p> <p>The following schematic is representing the wiring of the temperature sensor:</p> <p></p> <p>To use this package, add the following lines to your configuration file:</p> <pre><code>packages:\n  temperature_limiter:\n    url: http://github.com/XavierBerger/ESPHome-Solar-Router/\n    file: solar_router/temperature_limiter_DS18B20.yaml\n</code></pre> <p>This package needs to know the GPIO used by the temperature to get the temperature. This GPIO has to be defined by <code>DS18B20_pin</code> into <code>subtsitutions</code> section of your configuration as in example ballow:</p> <pre><code>substitutions:\n  # Sensor in home assistant gathering the temperature\n  DS18B20_pin: GPIO13\n  # Safety limit LED configuration\n  red_led_inverted: \"False\"\n  red_led_pin: GPIO4\n</code></pre> <p>Additionnal optional parameters can be set into <code>substitutions</code> section such as <code>DS18B20_address</code> (which is optional) and <code>temperature_update_interval</code> (which is set by default to <code>5s</code>).</p>"},{"location":"temperature_limiter_home_assistant/","title":"Temperature limiter Home Assistant","text":"<p>This package is designed to monitor a temperature coming from a sensor in Home Assistant and determines if a temperature threshold as been reached or not.</p> <p>When safety limit is reached, it is possible to turn on a LED. LED configuration has to be added in <code>substitutions</code> section as explained bellow.</p> <p>WARNING: Conduct some tests before letting the system regulate alone</p> <p>This temperature limit monitoring and safety limit may have some bug. It is strongly advised to validate the behaviour of your system carefully before letting the system working by its own.</p> <p>To use this package, add the following lines to your configuration file:</p> <pre><code>packages:\n  temperature_limiter:\n    url: http://github.com/XavierBerger/ESPHome-Solar-Router/\n    file: solar_router/temperature_limiter_home_assistant.yaml\n</code></pre> <p>This package needs to know the sensor to use to get the temperature to monitor. This sensor has to be defined by <code>temperature_sensor</code> into <code>subtsitutions</code> section of your configuration as in example ballow:</p> <pre><code>substitutions:\n  # Sensor in home assistant gathering the temperature\n  temperature_sensor: sensor.hot_water_temperature\n # Safety limit LED configuration\n  red_led_inverted: \"False\"\n  red_led_pin: GPIO4\n</code></pre> <p>Data availability and refresh rate</p> <p>This temperature limiter rely on Home Assistant to gather the temperature. It also depends on the rate of sensor update. If a sensor is updated too slowly, the regulation may not work as expected.</p>"}]}